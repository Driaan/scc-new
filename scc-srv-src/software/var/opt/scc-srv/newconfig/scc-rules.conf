# Sample, default rules file for scc-rule.

# SCC-release: 1.19.44
# ID:          $Id: scc-rules.conf 6182 2018-05-27 15:26:42Z siemkorteweg $

# Configuration file for scc-rules.
# Each realm can have it's own rules.
# Default rules should be checked in realm "All"

# NOTE:
# When you change this file, it will only be used when new snapshots
# arrive for the realm and scc-update is called.
# Force immediate update by using: scc-update -f

# Check for saved snapshots and log files:
	#CheckSavedFiles:all_systems
CheckSavedFiles:all_systems

# Check age of snapshots:
	#CheckSnapAge:all_systems:14
	# check all systems and report snapshots older than 14 days
	#CheckSnapAge:c01,c02:7
	# check systems c01 and c02 and report snapshots older than 7 days
CheckSnapAge:all_systems:14

# Check logfiles for text:
	#CheckLogEntries:all_systems
	# check all systems and report systems with changes in last run
	#CheckLogEntries:c01,c02
	# check systems c01 and c02 to report systems with changes in last run
	#CheckLogEntries:all_systems:fix:kernel:
	# check all systems and report changes of last run in kernel config
	#CheckLogEntries:all_systems:kernel.cfg
	# check all systems and report changes of last run matching expressions
	# in file <realm>/custom/kernel.cfg

# Check snapshots for text:
	#CheckSnapData:all_systems:fix:messages::
	# check snapshots of all systems for messages
	#CheckSnapData:c01,c02:fix:messages::
	# check snapshots of systems c01 and c02 for messages

# Check all snapshots for errors during runs of SCC
CheckSnapData:all_systems:^[fv][ia][xr]:messages::
# Check all snapshots for accounts without passwords.
CheckSnapData:all_systems::users:logins:.*:NP:

# Compare parts of snapshots:
# NOTE:
# Use the following rules with care as they will take some time.
	#CompareSnapData:c01,c02,c03:<class_file>
	# extract data according to <class_file> for systems c01, c02 and c03
	# and compare resulting data from c02 and c03 with resulting data from 
	# c01. For a single classification, replace <class_file> with the literal
	# text of the classification
	#CompareSnapData:c03:<class_file>
	# extract data according to <class_file> for all systems in a realm
	# and compare resulting data with data resulting from c03
	#CompareSnapData:all_systems:<class_file>
	# extract data according to <class_file> for all systems in a realm
	# and compare resulting data with data resulting from first, alphabetical
	# system

# Require uniqueness of certain data
# Note:
# use of regular expressions will cost performance.
	#Unique:c01,c02,c03:<text>
	# search snapshots of c01, c02 and c03 for <text> and report when this text appears in more than one snapshot
	#Unique:all_systems:<text>
	# search all snapshots of <text> and report when this text appears in more than one snapshot
	# To avoid that two mail-servers serve the same domain:
	#Unique:all_systems:fix:software:sendmail:options::  (canonical domain name)

# Uncomment the following variables to direct the result of scc-rules.

# Program to signal the output of scc-rules, possible values are:
# - mail		mail to email-address SIGNAL_DEST
# - opc			send opc-message
# - cat			possible values for SIGNAL_DEST are:
#			- stdout	stdout, default
#			- null		ignore
#			- file		specific logfile
#SIGNAL_PROG=cat
#SIGNAL_DEST=stdout
