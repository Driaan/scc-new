#!/bin/sh

# Shell script to extract data with certain classifications from a snapshot.
# Copyright (C) 2001-2004 Open Challenge B.V.
# Copyright (C) 2004-2005 OpenEyeT Professional Services.
# Copyright (C) 2005-2018 QNH.
# Copyright (C) 2019 Siem Korteweg.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.
# If not, write to the Free Software Foundation,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
#
# Contact information: https://sourceforge.net/projects/sysconfcollect/support

# SCC-release: 1.19.44
# ID:          $Id: scc-baseline 6217 2019-03-22 18:46:12Z siemkorteweg $


ProgName=${0##*/};			export ProgName

set -u

export SCC_BIN=/opt/scc-srv/bin
export SCC_CONF=/var/opt/scc-srv/conf
export SCC_DATA=/var/opt/scc-srv/data
export SCC_TMP=/tmp

export TMPDIR=${SCC_TMP}
export TMP=${SCC_TMP}

export SHELL=/bin/sh
export LANG=C

PATH=/sbin:/usr/sbin:/usr/bin:/bin:${SCC_BIN};	export PATH

umask 077

if [ -d /usr/xpg4/bin ]
then
	PATH=/usr/xpg4/bin:${PATH}
fi

# Do not cd to ${SCC_TMP} in case of a relative pathname for the class-file.

TMP_FILE=${SCC_TMP}/scc_base_$$;		export TMP_FILE

trap 'rm -f ${TMP_FILE}' 0
trap "exit 2" 1 2 3 15

if [ $# -ne 1 ]
then
	echo "Syntax error, use: ${ProgName} <class>" >&2
	exit 1
fi

if [ ! -f ${1} ]
then
	echo "${ProgName}: file ${1} not found" >&2
	exit 2
fi

# Rebuild the class-file to an awk-script that filters lines with classifications
# that contain text out of the class-file.
# Ignore comment-lines, then escape all special-characters for 
# the regular expressions in the awk-script.
# The classifications will be used as regular expressions in the awk-script.
# Therefore we have to escape the meta-characters of the regular expressions and
# also the delimiter of the regular expressions. The full list is: /.[\(*+$|
sed	-e '/^#/d'		\
	-e 's@/@\\/@g'		\
	-e 's@\.@\\.@g'		\
	-e 's@\[@\\[@g'		\
	-e 's@\\@\\@g'		\
	-e 's@(@\\(@g'		\
	-e 's@*@\\*@g'		\
	-e 's@+@\\+@g'		\
	-e 's@\$@\\$@g'		\
	-e 's@|@\\|@g'		${1}		|
awk '{
		# Add fix to the classifications to ensure that
		# - only fixed data is extracted
		# - only matching toplevel classes are extracted
		prefix="fix:"
		if ( $0 ~ "^:" )
		{
			prefix="fix"
		}
		postfix=":"
		if ( $0 ~ ":$" )
		{
			postfix=""
		}
		printf( "/^%s%s%s/	{ print; next }\n", prefix, $0, postfix )
	}' >${TMP_FILE}

# Get the data and limit the result to "fixed" data.
awk -F: -f ${TMP_FILE} -

exit 0
