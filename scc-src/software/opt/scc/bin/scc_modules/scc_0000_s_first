#!/bin/sh
# Shell script to call programs having side effects on scc modules
# Copyright (C) 2014-2018 QNH.
# Copyright (C) 2019 Siem Korteweg.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.
# If not, write to the Free Software Foundation,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
#
# Contact information: https://sourceforge.net/projects/sysconfcollect/support

# This is a system module of scc, to call it separately in the
# proper environment, use: scc-collect -i -e <module_name>

# SCC-release: 1.26.73
# ID:          $Id: scc_0000_s_first 6216 2019-03-21 20:47:50Z siemkorteweg $
 
set -u
[ "${SCC_DEBUG:-}" ] && set -x

export ProgName=${0##*/}

if [ -z "${SCC_BIN:-}" -o -z "${SCC_CONF:-}" -o -z "${SCC_DATA:-}" ]
then
	echo "${ProgName}: activate this program via scc(1), scc-log(1) or scc-collect(1)" >&2
	exit 2
fi

if [ ! -w ${SCC_DATA} ]
then
	echo "${ProgName}: insufficient permissions to write in data directory: ${SCC_DATA}" >&2
	exit 2
fi

. ${SCC_BIN}/scc_modules/scc_utils

# This module does not collect any data. It is calling programs (and ignoring their output)
# to avoid side affects in other modules.
# 
# For example, suppose that a system does not use network bridges.
# In that case the corresponding kernel modules are not loaded during
# normal operation of the system. Running SCC and thus calling brctl results in 
# loading of these modules and thus to changes in the logbook.
# This happens after every reboot of the system.
#
# By calling brctl in the first module SCC runs, we make sure that the side effects
# are not recorded as changes.

if [ -x /usr/sbin/brctl ]
then
	/usr/sbin/brctl show >/dev/null 2>/dev/null
fi

if [ -x /usr/bin/cachefsstat ]
then
	/usr/bin/cachefsstat 2>/dev/null >/dev/null
fi

if [ -x /sbin/dmsetup ]
then
	/sbin/dmsetup info 2>/dev/null >/dev/null
fi

if [ -x /sbin/iptables-save -o -x /usr/sbin/iptables-save ]
then
	iptables-save 2>/dev/null >/dev/null </dev/null
	iptables_exe="$(which iptables 2>/dev/null)"
	if [ -x "${iptables_exe}" ]
	then
		${iptables_exe} -nL 2>/dev/null >/dev/null </dev/null
	fi
fi

if [ -x /sbin/nft ]
then
	/sbin/nft list tables 2>/dev/null >/dev/null </dev/null
fi

if [ -x /sbin/ss ]
then
	/sbin/ss -ltnu 2>/dev/null >/dev/null
fi

exit 0
