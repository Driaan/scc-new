#!/bin/sh

# Shell script to collect data concerning application servers.
# Copyright (C) 2008-2018 QNH.
# Copyright (C) 2019 Siem Korteweg.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.
# If not, write to the Free Software Foundation,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
#
# Contact information: https://sourceforge.net/projects/sysconfcollect/support

# This is a system module of scc, to call it separately in the
# proper environment, use: scc-collect -i -e <module_name>

# SCC-release: 1.26.73
# ID:          $Id: scc_0620_s_appl_server 6216 2019-03-21 20:47:50Z siemkorteweg $
 
set -u
[ "${SCC_DEBUG:-}" ] && set -x

export ProgName=${0##*/}

if [ -z "${SCC_BIN:-}" -o -z "${SCC_CONF:-}" -o -z "${SCC_DATA:-}" ]
then
	echo "${ProgName}: activate this program via scc(1), scc-log(1) or scc-collect(1)" >&2
	exit 2
fi

if [ ! -w ${SCC_DATA} ]
then
	echo "${ProgName}: insufficient permissions to write in data directory: ${SCC_DATA}" >&2
	exit 2
fi

. ${SCC_BIN}/scc_modules/scc_utils

export fix_base_class="fix:application server"
export var_base_class="var:application server"

# Handle Glassfish
for base in /usr/glassfish*/glassfish
do
	if [ -d "${base}" ]
	then
		while read sub pattern
		do
			for file in ${base}/${sub}/${pattern}
			do
				scc_check_file "${file}" "${fix_base_class}:Glassfish:${base}:${file}::" "#"
			done
		done <<- _EOF_
			domains	*/config/*.xml
			domains	*/config/*.conf
			domains	*/config/*.policy
			domains	*/config/*.properties
			domains	*/config/keyfile
			config	*.conf
			config	*.container
			config	*.properties
		_EOF_
	fi
done

# Handle JBOSS:
for base in /usr/share/jboss-* /opt/jboss-* /etc/jboss*
do
	if [ -d "${base}" ]
	then
		while read sub pattern
		do
			for file in ${base}/${sub}/${pattern}
			do
				scc_check_file "${file}" "${fix_base_class}:JBOSS:${base}:${file}::" "#"
			done
		done <<- _EOF_
			appclient	configuration/*
			bin		*conf
			domain		configuration/*
			standalone	configuration/*
			standalone	*
			modules		org/*/*/configuration/main/module.xml
		_EOF_
	fi
done

scc_check_file /etc/jbossas/jbossas.conf "${fix_base_class}:JBOSS:/etc/jbossas/jbossas.conf::" "#"

# Handle Tomcat
for file in /etc/tomcat/* /etc/tomcat/*/*
do
	scc_check_file "${file}" "${fix_base_class}:tomcat:${file}::" "#"
done

# Handle WebSphere products
for vendor in IBM ibm
do
	for product in AppServer ESB PortalServer ProcServer
	do
		# /usr (AIX) and /opt (Linux, Solaris)
		for base in /usr /opt
		do
			if [ -d "${base}/${vendor}/WebSphere/${product}/profiles" ]
			then
				for entry in ${base}/${vendor}/WebSphere/${product}/profiles/*
				do
					profile="${entry##*/}"
					for file in	"${entry}"/properties/*.props		\
							"${entry}"/properties/*.properties	\
							"${entry}"/properties/*.policy
					do
						category="${file##*/}"
						scc_check_file "${file}" "${fix_base_class}:WebSphere ${product}:profile ${profile}:${category}::" "#"
					done
				done

				break
			fi
		done
	done
done

# Handle MQ-series software
for file in /opt/mqm/properties/version/*.swtag
do
	scc_check_file "${file}" "fix:Websphere:MQ:version::" "#"
done

for file in	/var/mqm/config/isa.xml		\
		/var/mqm/mqs.ini		\
		/var/mqm/service.env
do
	scc_check_file "${file}" "fix:Websphere:MQ:${file}::" "#"
done

for dir in /var/mqm/qmgrs/*
do
	scc_check_file "${dir}"/qm.ini "${fix_base_class}:Websphere MQ:queue ${dir##*/}:qm.ini::" "#"
done

exit 0
